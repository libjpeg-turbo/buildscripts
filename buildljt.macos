set -u
set -e

SCRIPTDIR=`dirname $0`

if ls $OUTDIR/files/libjpeg-turbo-[0-9]*.dmg >/dev/null 2>&1; then
	if [ $FORCEBINARY = 0 ]; then
		>&2 echo
		>&2 echo Binary already exists!
		>&2 echo Run $SCRIPT -fb to rebuild it.
		>&2 echo
		exit 1
	else
		rm -f $OUTDIR/files/libjpeg-turbo.dmg
	fi
fi

exec 2>&1

export CTEST_OUTPUT_ON_FAILURE=1

pushd libjpeg-turbo-[0-9]*

if [ -f $SCRIPTDIR/setupscripts/macsign ]; then
	. $SCRIPTDIR/setupscripts/macsign
fi

PRIMARY=macosx8664
SECONDARY=macosarm64
if [ "`uname -m`" = "arm64" ]; then
	PRIMARY=macosarm64
	SECONDARY=macosx8664
fi

mkdir $SECONDARY
pushd $SECONDARY
$SCRIPTDIR/setupscripts/$SECONDARY -DWITH_JAVA=0
export NUMCPUS=`sysctl -n hw.ncpu`
make -j$NUMCPUS --load-average=$NUMCPUS
if [ "`uname -m`" = "arm64" ]; then
	# Go go gadget Rosetta
	ctest -j$NUMCPUS
fi
popd

mkdir $PRIMARY
pushd $PRIMARY
$SCRIPTDIR/setupscripts/$PRIMARY
export NUMCPUS=`sysctl -n hw.ncpu`
make -j$NUMCPUS --load-average=$NUMCPUS
ctest -j$NUMCPUS
make dmg
if [ -n "${MACOS_NOTARIZE_ID-}" -a -n "${MACOS_NOTARIZE_TEAM_ID-}" -a \
	-n "${MACOS_NOTARIZE_PASS-}" ]; then
	echo libjpeg-turbo-[0-9]*.dmg ...
	xcrun notarytool submit libjpeg-turbo-[0-9]*.dmg \
		--apple-id $MACOS_NOTARIZE_ID --team-id $MACOS_NOTARIZE_TEAM_ID \
		--password $MACOS_NOTARIZE_PASS --wait
	xcrun stapler staple libjpeg-turbo-[0-9]*.dmg
fi
mv libjpeg-turbo-[0-9]*.dmg $OUTDIR/files/
popd

mkdir iosarm64
pushd iosarm64
$SCRIPTDIR/setupscripts/iosarm64
make -j$NUMCPUS --load-average=$NUMCPUS
popd

mkdir iosx8664
pushd iosx8664
$SCRIPTDIR/setupscripts/iosx8664
make -j$NUMCPUS --load-average=$NUMCPUS
make dmg
if [ -n "${MACOS_NOTARIZE_ID-}" -a -n "${MACOS_NOTARIZE_TEAM_ID-}" -a \
	-n "${MACOS_NOTARIZE_PASS-}" ]; then
	echo libjpeg-turbo-ios-[0-9]*.dmg ...
	xcrun notarytool submit libjpeg-turbo-ios-[0-9]*.dmg \
		--apple-id $MACOS_NOTARIZE_ID --team-id $MACOS_NOTARIZE_TEAM_ID \
		--password $MACOS_NOTARIZE_PASS --wait
	xcrun stapler staple libjpeg-turbo-ios-[0-9]*.dmg
fi
mv libjpeg-turbo-ios-[0-9]*.dmg $OUTDIR/files/
popd
