SCRIPTDIR=`dirname $0`

if [ -x /opt/local/bin/yasm ]; then
	export ASM_NASM=/opt/local/bin/yasm
elif [ -x /usr/local/bin/yasm ]; then
	export ASM_NASM=/usr/local/bin/yasm
else
	echo YASM not found!
	exit 1
fi

export CFLAGS="-mmacosx-version-min=10.7 -Wall"

CMAKE_BUILD_TYPE=Release

if [ "$1" = "-g" ]; then
	CMAKE_BUILD_TYPE=RelWithDebInfo
	shift
fi

# Out of the box, CMake 2.8.x can't find jni.h on Mac unless the (deprecated)
# Java for OS X Developer Package is installed, so we have to coax it a bit so
# it can find jni.h from the Oracle JDK.
if [ -x /System/Library/Frameworks/JavaVM.framework/Versions/Current/Commands/java_home ]; then
	JAVADIR=`/System/Library/Frameworks/JavaVM.framework/Versions/Current/Commands/java_home`
else
	echo Oracle JDK not found!
	exit 1
fi

. $SCRIPTDIR/macvars

cmake -G"Unix Makefiles" -DCMAKE_BUILD_TYPE=${CMAKE_BUILD_TYPE} \
	-DCMAKE_C_COMPILER=/Applications/Xcode_12.2.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang \
	-DCMAKE_OSX_SYSROOT=/Applications/Xcode_12.2.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk \
	-DCMAKE_JAVA_COMPILE_FLAGS='-target 1.5 -source 1.5' \
	-DCMAKE_POSITION_INDEPENDENT_CODE=1 -DREQUIRE_SIMD=1 -DWITH_JAVA=1 \
	-DJAVA_AWT_INCLUDE_PATH=$JAVADIR/include \
	-DJAVA_INCLUDE_PATH=$JAVADIR/include \
	-DJAVA_INCLUDE_PATH2=$JAVADIR/include/darwin \
	-DJAVA_AWT_LIBRARY="-framework JavaVM" \
	-DJAVA_JVM_LIBRARY="-framework JavaVM" \
	-DOSX_32BIT_BUILD="" -DIOS_ARMV7_BUILD="" -DIOS_ARMV7S_BUILD="" \
	"${CMAKEARGS[@]}" .. ${1+"$@"}
