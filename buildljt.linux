set -u
set -e

SCRIPTDIR=`dirname $0`

case "`uname -m`" in
ppc64)
	RPM64=ppc64
	RPMA64=ppc64
	RPM32=ppc
	DEB64=ppc64
	DEBA64=ppc64
	DEB32=ppc
	;;
*)
	RPM64=x86_64
	RPMA64=aarch64
	RPM32=i386
	DEB64=amd64
	DEBA64=arm64
	DEB32=i386
	;;
esac

if ls $OUTDIR/files/libjpeg-turbo-official-[0-9]*.$RPM32.rpm >/dev/null 2>&1 \
	|| ls $OUTDIR/files/libjpeg-turbo-official-[0-9]*.$RPM64.rpm >/dev/null 2>&1 \
	|| ls $OUTDIR/files/libjpeg-turbo-official-[0-9]*.$RPMA64.rpm >/dev/null 2>&1 \
	|| ls $OUTDIR/files/libjpeg-turbo-official*_[0-9]*_$DEB64.deb >/dev/null 2>&1 \
	|| ls $OUTDIR/files/libjpeg-turbo-official*_[0-9]*_$DEBA64.deb >/dev/null 2>&1 \
	|| ls $OUTDIR/files/libjpeg-turbo-official*_[0-9]*_$DEB32.deb >/dev/null 2>&1; then
	if [ $FORCEBINARY = 0 ]; then
		>&2 echo
		>&2 echo Binary already exists!
		>&2 echo Run $SCRIPT -fb to rebuild it.
		>&2 echo
		exit 1
	else
		rm -f $OUTDIR/files/*.$RPM32.rpm $OUTDIR/files/*.$RPM64.rpm $OUTDIR/files/*.$RPMA64.rpm $OUTDIR/files/*.deb
	fi
fi

exec 2>&1

export CTEST_OUTPUT_ON_FAILURE=1

echo Creating $RPM64 binary RPM ...

mkdir -p rpmbuild/RPMS
mkdir -p rpmbuild/BUILD
mkdir -p rpmbuild/SRPMS
mkdir -p rpmbuild/buildroot

export CFLAGS=
export JAVAFLAGS='-target 1.5 -source 1.5'
export LDFLAGS=
rpm -i --define "_topdir $TMPDIR/rpmbuild" \
	$OUTDIR/files/libjpeg-turbo-official-[0-9]*.src.rpm
rpmbuild -ba --buildroot $TMPDIR/rpmbuild/buildroot \
	--define "_topdir $TMPDIR/rpmbuild" rpmbuild/SPECS/libjpeg-turbo-official.spec
VERSION=`rpm -q -p rpmbuild/RPMS/$RPM64/libjpeg-turbo-official-[0-9]*.$RPM64.rpm | cut -f4 -d-`
mv rpmbuild/RPMS/$RPM64/libjpeg-turbo-official-[0-9]*.$RPM64.rpm $OUTDIR/files/libjpeg-turbo-official-$VERSION.$RPM64.rpm
unset JAVAFLAGS

# This bit of uniqueness is necessary to ensure that the JAR file is bitwise
# identical between the x86-64 and i386 RPM, so they can be co-installed on
# RHEL 6.
cp rpmbuild/BUILD/libjpeg-turbo-$VERSION/java/turbojpeg.jar .
rm -rf rpmbuild

if [ -f $SCRIPTDIR/gpgsign ]; then
	. $SCRIPTDIR/gpgsign
	expect $SCRIPTDIR/rpmsign "$GPG_KEY_PASS" "$GPG_KEY_NAME" $OUTDIR/files/libjpeg-turbo-official-$VERSION.$RPM64.rpm
	rpm --checksig -v $OUTDIR/files/libjpeg-turbo-official-$VERSION.$RPM64.rpm
fi

echo Creating $RPM32 binary RPM ...

pushd libjpeg-turbo-[0-9]*
mkdir linux.rpm
pushd linux.rpm
$SCRIPTDIR/setupscripts/linux
export NUMCPUS=`grep -c '^processor' /proc/cpuinfo`
make -j$NUMCPUS --load-average=$NUMCPUS
MD5JAR1=`md5sum ../../turbojpeg.jar | cut -f1 -d' '`
rm java/turbojpeg.jar
mv ../../turbojpeg.jar java/
touch -am java/turbojpeg.jar
make rpm
MD5JAR2=`md5sum java/turbojpeg.jar | cut -f1 -d' '`
if [ ! "$MD5JAR1" = "$MD5JAR2" ]; then
	echo ERROR: JARs are not bitwise identical.
	exit 1
fi
VERSION=`rpm -q -p libjpeg-turbo-official-[0-9]*.$RPM32.rpm | cut -f4 -d-`
mv libjpeg-turbo-official-[0-9]*.$RPM32.rpm $OUTDIR/files/libjpeg-turbo-official-$VERSION.$RPM32.rpm
if [ -f $SCRIPTDIR/gpgsign ]; then
	expect $SCRIPTDIR/rpmsign "$GPG_KEY_PASS" "$GPG_KEY_NAME" $OUTDIR/files/libjpeg-turbo-official-$VERSION.$RPM32.rpm
	rpm --checksig -v $OUTDIR/files/libjpeg-turbo-official-$VERSION.$RPM32.rpm
fi
popd

echo Creating $DEB64 binary DEB ...

mkdir linux64
pushd linux64
$SCRIPTDIR/setupscripts/linux64
make -j$NUMCPUS --load-average=$NUMCPUS
make deb
make test
#make tjtest
mv libjpeg-turbo-official_[0-9]*_$DEB64.deb $OUTDIR/files/
if [ -f $SCRIPTDIR/gpgsign ]; then
	expect $SCRIPTDIR/debsign "$GPG_KEY_PASS" "$GPG_KEY_ID" $OUTDIR/files/libjpeg-turbo-official_[0-9]*_$DEB64.deb
fi
popd

echo Creating $DEB32 binary DEB ...

mkdir linux
pushd linux
$SCRIPTDIR/setupscripts/linux
make -j$NUMCPUS --load-average=$NUMCPUS
make deb
make test
#make tjtest
mv libjpeg-turbo-official_[0-9]*_$DEB32.deb $OUTDIR/files/
if [ "$DEB64" = "amd64" ]; then
	mv libjpeg-turbo-official32_[0-9]*_$DEB64.deb $OUTDIR/files/
fi
if [ -f $SCRIPTDIR/gpgsign ]; then
	expect $SCRIPTDIR/debsign "$GPG_KEY_PASS" "$GPG_KEY_ID" $OUTDIR/files/libjpeg-turbo-official_[0-9]*_$DEB32.deb
	if [ "$DEB64" = "amd64" ]; then
		expect $SCRIPTDIR/debsign "$GPG_KEY_PASS" "$GPG_KEY_ID" $OUTDIR/files/libjpeg-turbo-official32_[0-9]*_$DEB64.deb
	fi
fi
popd

if [ "$RPM64" != "$RPMA64" -a "$DEB64" != "$DEBA64" ]; then

	echo Creating AArch64 binary RPM and DEB ...

	mkdir linux64.arm
	pushd linux64.arm
	$SCRIPTDIR/setupscripts/linux64.arm
	make -j$NUMCPUS --load-average=$NUMCPUS
	STRIP=/opt/gcc.arm64/bin/aarch64-none-linux-gnu-strip make rpm
	VERSION=`rpm -q -p libjpeg-turbo-official-[0-9]*.$RPMA64.rpm | cut -f4 -d-`
	mv libjpeg-turbo-official-[0-9]*.$RPMA64.rpm $OUTDIR/files/libjpeg-turbo-official-$VERSION.$RPMA64.rpm
	if [ -f $SCRIPTDIR/gpgsign ]; then
		expect $SCRIPTDIR/rpmsign "$GPG_KEY_PASS" "$GPG_KEY_NAME" $OUTDIR/files/libjpeg-turbo-official-$VERSION.$RPMA64.rpm
		rpm --checksig -v $OUTDIR/files/libjpeg-turbo-official-$VERSION.$RPMA64.rpm
	fi
	make deb
	mv libjpeg-turbo-official_[0-9]*_$DEBA64.deb $OUTDIR/files/
	if [ -f $SCRIPTDIR/gpgsign ]; then
		expect $SCRIPTDIR/debsign "$GPG_KEY_PASS" "$GPG_KEY_ID" $OUTDIR/files/libjpeg-turbo-official_[0-9]*_$DEBA64.deb
	fi
	popd

fi

popd
